digraph _Z3sumPii{

"  %array.addr = alloca i32*, align 8";
"  %count.addr = alloca i32, align 4";
"  %i = alloca i32, align 4";
"  %sum = alloca i32, align 4";
"  %d = alloca i32, align 4";
"i32* %array" -> "  %array.addr = alloca i32*, align 8";
"i32 %count" -> "  %count.addr = alloca i32, align 4";
"i32 66" -> "  %sum = alloca i32, align 4";
"i32 0" -> "  %i = alloca i32, align 4";
"  %i = alloca i32, align 4" -> "  %0 = load i32* %i, align 4";
"  %count.addr = alloca i32, align 4" -> "  %1 = load i32* %count.addr, align 4";
"  %0 = load i32* %i, align 4" -> "  %cmp = icmp slt i32 %0, %1";
"  %1 = load i32* %count.addr, align 4" -> "  %cmp = icmp slt i32 %0, %1";
"  %cmp = icmp slt i32 %0, %1" -> "  %2 = load i32* %sum, align 4";
"  %cmp = icmp slt i32 %0, %1" -> "  %call1 = call i32 @_Z3addii(i32 6, i32 5)";
"  %sum = alloca i32, align 4" -> "  %2 = load i32* %sum, align 4";
"  %i = alloca i32, align 4" -> "  %3 = load i32* %i, align 4";
"  %array.addr = alloca i32*, align 8" -> "  %4 = load i32** %array.addr, align 8";
"  %4 = load i32** %array.addr, align 8" -> "  %arrayidx = getelementptr inbounds i32* %4, i64 %idxprom";
"  %arrayidx = getelementptr inbounds i32* %4, i64 %idxprom" -> "  %5 = load i32* %arrayidx, align 4";
"  %2 = load i32* %sum, align 4" -> "  %call = call i32 @_Z3addii(i32 %2, i32 %5)";
"  %5 = load i32* %arrayidx, align 4" -> "  %call = call i32 @_Z3addii(i32 %2, i32 %5)";
"  %call = call i32 @_Z3addii(i32 %2, i32 %5)" -> "  %sum = alloca i32, align 4";
"  %i = alloca i32, align 4" -> "  %6 = load i32* %i, align 4";
"  %6 = load i32* %i, align 4" -> "  %inc = add nsw i32 %6, 1";
"i32 1" -> "  %inc = add nsw i32 %6, 1";
"  %inc = add nsw i32 %6, 1" -> "  %i = alloca i32, align 4";
"i32 6" -> "  %call1 = call i32 @_Z3addii(i32 6, i32 5)";
"i32 5" -> "  %call1 = call i32 @_Z3addii(i32 6, i32 5)";
"  %call1 = call i32 @_Z3addii(i32 6, i32 5)" -> "  %d = alloca i32, align 4";
"  %sum = alloca i32, align 4" -> "  %7 = load i32* %sum, align 4";
"  %7 = load i32* %sum, align 4" -> "  ret i32 %7";

}
